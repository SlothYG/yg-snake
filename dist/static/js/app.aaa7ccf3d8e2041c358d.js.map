{"version":3,"sources":["webpack:///./src/App.vue?bf65","webpack:///./src/App.vue","webpack:///src/App.vue","webpack:///src/pages/snake.vue","webpack:///./src/pages/snake.vue?db4e","webpack:///./src/pages/snake.vue","webpack:///./src/router/index.js","webpack:///./src/main.js"],"names":["selectortype_template_index_0_src_App","render","_h","this","$createElement","_c","_self","attrs","id","staticRenderFns","src_App","__webpack_require__","normalizeComponent","name","ssrContext","snake","data","snakeArr","box","bodyLength","snakeDirection","undefined","wait","snakeMoveTimer","snakeMoveSpeed","snakeFood","mounted","_this","snakeInit","$nextTick","gameStart","bindKeycode","createFood","methods","snakeHead","parseInt","Math","random","push","snakeBody","randomNum","index","snakeDraw","_box","slicedToArray_default","x","y","row","floor","col","length","_snakeArr$index","a","b","$refs","className","isSnakeRule","li","snakeMove","_snakeFood","foodx","foody","newHead","_snakeArr$pop","pop","_snakeArr$pop2","unshift","clearInterval","_this2","document","onkeydown","_ref","keyCode","setInterval","pages_snake","_vm","staticClass","_l","item","key","aitem","aindex","ref","refInFor","src_pages_snake","snake_normalizeComponent","Vue","use","Router","router","routes","path","component","config","productionTip","el","components","App","template"],"mappings":"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","file":"static/js/app.aaa7ccf3d8e2041c358d.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-05dc1ed8\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-05dc1ed8\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-05dc1ed8\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","<template>\n  <div id=\"app\">\n    <router-view/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App'\n}\n</script>\n\n<style>\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","<template>\r\n    <div class=\"wapper\">\r\n        <!-- 棋盘容器 -->\r\n        <div class=\"snake-content\">\r\n            <ul v-for=\"(item, index) in box[0]\" :key=\"index\">\r\n                <!-- <li v-for=\"(aitem, aindex) in box[1]\" :key=\"aindex\" :ref=\"'r'+ item + 'c'+ aitem\"></li> -->\r\n                <li v-for=\"(aitem, aindex) in box[1]\" :key=\"aindex\" :ref='`r${index}`'>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"snake\",\r\n        data() {\r\n            return {\r\n                snakeArr: [],\r\n                box: [30, 30], // 棋盘大小\r\n                bodyLength: 3, // 初始化蛇身的长度\r\n                snakeDirection: undefined,\r\n                wait: true,\r\n                snakeMoveTimer: null,\r\n                snakeMoveSpeed: 200, // 蛇的移动速度\r\n                snakeFood: undefined, // 食物坐标\r\n            }\r\n        },\r\n        mounted() {\r\n            // 初始化一条蛇的坐标\r\n            this.snakeInit();\r\n            this.$nextTick(() => {\r\n                this.gameStart();\r\n                this.bindKeycode();\r\n                this.createFood();\r\n            })\r\n        },\r\n        methods: {\r\n            // 让我我们确认一条蛇的坐标\r\n            snakeInit() {\r\n                const {\r\n                    box,\r\n                    snakeArr,\r\n                    bodyLength,\r\n                    snakeDirection\r\n                } = this;\r\n                // 然后，我们确认一个狗…蛇头坐标，因为我们想让这条蛇随机出现在棋盘的各个位置\r\n                let snakeHead = [parseInt(Math.random() * box[0]), parseInt(Math.random() * box[1])];\r\n\r\n                // 先添加到蛇的坐标中\r\n                snakeArr.push(snakeHead);\r\n\r\n                // 然后来料理蛇身\r\n                let snakeBody = snakeHead;\r\n                let randomNum = parseInt(Math.random() * 4);\r\n\r\n                switch (randomNum) {\r\n                    case 0:\r\n                        // 不让出现在边缘\r\n                        if (snakeHead[0] >= 3) {\r\n                            this.snakeDirection = 'down';\r\n                        } else {\r\n                            this.snakeDirection = 'up';\r\n                        }\r\n                        break;\r\n\r\n                    case 1:\r\n                        // 不让出现在边缘\r\n                        if (box[0] - snakeHead[0] >= 3) {\r\n                            this.snakeDirection = 'up';\r\n                        } else {\r\n                            this.snakeDirection = 'down';\r\n                        }\r\n                        break;\r\n\r\n                    case 2:\r\n                        // 不让出现在边缘\r\n                        if (snakeHead[1] >= 3) {\r\n                            this.snakeDirection = 'right';\r\n                        } else {\r\n                            this.snakeDirection = 'left';\r\n                        }\r\n                        break;\r\n\r\n                    case 3:\r\n                        // 不让出现在边缘\r\n                        if (box[1] - snakeHead[1] >= 3) {\r\n                            this.snakeDirection = 'left';\r\n                        } else {\r\n                            this.snakeDirection = 'right';\r\n                        }\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                for (let index = 0; index < bodyLength; index++) {\r\n                    switch (randomNum) {\r\n                        case 0:\r\n                            // 不让出现在边缘\r\n                            if (snakeHead[0] > 3) {\r\n                                snakeBody = [snakeBody[0] - 1, snakeBody[1]]\r\n                            } else {\r\n                                snakeBody = [snakeBody[0] + 1, snakeBody[1]]\r\n                            }\r\n                            break;\r\n\r\n                        case 1:\r\n                            // 不让出现在边缘\r\n                            if (box[0] - snakeHead[0] > 3) {\r\n                                snakeBody = [snakeBody[0] + 1, snakeBody[1]]\r\n                            } else {\r\n                                snakeBody = [snakeBody[0] - 1, snakeBody[1]]\r\n                            }\r\n                            break;\r\n\r\n                        case 2:\r\n                            // 不让出现在边缘\r\n                            if (snakeHead[1] > 3) {\r\n                                snakeBody = [snakeBody[0], snakeBody[1] - 1]\r\n                            } else {\r\n                                snakeBody = [snakeBody[0], snakeBody[1] + 1]\r\n                            }\r\n                            break;\r\n\r\n                        case 3:\r\n                            // 不让出现在边缘\r\n                            if (box[1] - snakeHead[1] > 3) {\r\n                                snakeBody = [snakeBody[0], snakeBody[1] + 1]\r\n                            } else {\r\n                                snakeBody = [snakeBody[0], snakeBody[1] - 1]\r\n                            }\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                    // 添加到蛇的坐标中\r\n                    snakeArr.push(snakeBody);\r\n                }\r\n                // \r\n                this.snakeDraw()\r\n            },\r\n\r\n            // 创建一个食物\r\n            createFood() {\r\n                const {\r\n                    snakeArr,\r\n                    box: [x, y]\r\n                } = this;\r\n                while (true) {\r\n                    const row = Math.floor(Math.random() * x);\r\n                    const col = Math.floor(Math.random() * y);\r\n                    for (let index = 0; index < snakeArr.length; index++) {\r\n                        const [a, b] = snakeArr[index];\r\n                        if (row != a && col != b) {\r\n                            this.snakeFood = [row, col];\r\n                            const food = this.$refs[`r${row}`][col];\r\n                            food.className = 'snake-food';\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n\r\n            // 出局规则\r\n            isSnakeRule() {\r\n                const {\r\n                    snakeArr,\r\n                    box,\r\n                } = this;\r\n                for (let index = 1; index < snakeArr.length; index++) {\r\n                    if (snakeArr[0][0] == snakeArr[index][0] && snakeArr[0][1] == snakeArr[index][1]) {\r\n                        return false;\r\n                    }\r\n                }\r\n                if (parseInt(snakeArr[0][0]) < 0 || parseInt(snakeArr[0][1]) < 0 || parseInt(snakeArr[0][0]) == box[\r\n                        0] || parseInt(snakeArr[0][1]) == box[1]) {\r\n                    return false;\r\n                } else {\r\n                    return true;\r\n                }\r\n            },\r\n\r\n            // 让我们画出这条蛇皮吧\r\n            snakeDraw() {\r\n                const {\r\n                    snakeArr\r\n                } = this;\r\n                for (let index = 0; index < snakeArr.length; index++) {\r\n                    const li = this.$refs[`r${snakeArr[index][0]}`][snakeArr[index][1]];\r\n                    if (index == 0) {\r\n                        li.className = 'snake-head'\r\n                    } else {\r\n                        li.className = 'snake-body'\r\n                    }\r\n                }\r\n                this.wait = true;\r\n            },\r\n\r\n            // 接下来我们应该让这个动起来\r\n            snakeMove() {\r\n                let {\r\n                    snakeArr,\r\n                    snakeDirection,\r\n                    snakeFood: [foodx, foody]\r\n                } = this;\r\n                let newHead = []; // 移动方向头\r\n                switch (snakeDirection) {\r\n                    case 'left':\r\n                        newHead = [snakeArr[0][0], snakeArr[0][1] - 1]\r\n                        break;\r\n                    case 'right':\r\n                        newHead = [snakeArr[0][0], snakeArr[0][1] + 1]\r\n                        break;\r\n                    case 'up':\r\n                        newHead = [snakeArr[0][0] - 1, snakeArr[0][1]]\r\n                        break;\r\n                    case 'down':\r\n                        newHead = [snakeArr[0][0] + 1, snakeArr[0][1]]\r\n                        break;\r\n\r\n                    default:\r\n                        break;\r\n                }\r\n                // 把原先的头和尾弄出来\r\n                let oldHeadLi = this.$refs[`r${snakeArr[0][0]}`][snakeArr[0][1]];\r\n\r\n                // 移动之后，原先头的作为是蛇身，蛇尾的坐标为空\r\n\t\t\t\toldHeadLi.className = 'snake-body';\r\n\t\t\t\t\r\n                // 判断是否吃到食物\r\n                if (snakeArr[0][0] == foodx && snakeArr[0][1] == foody) {\r\n\t\t\t\t\tthis.createFood();\r\n                } else {\r\n\t\t\t\t\tconst [row, col] = snakeArr.pop();\r\n\t\t\t\t\tconst oldFootLi = this.$refs[`r${row}`][col];\r\n                \toldFootLi.className = '';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.snakeArr.unshift(newHead);\r\n\r\n\r\n                if (this.isSnakeRule()) {\r\n                    this.snakeDraw();\r\n                } else {\r\n                    clearInterval(this.snakeMoveTimer)\r\n                }\r\n            },\r\n\r\n\r\n            /**\r\n             * 按键改变移动方向\r\n             */\r\n            bindKeycode() {\r\n                document.onkeydown = ({\r\n                    keyCode\r\n                }) => {\r\n                    const {\r\n                        snakeDirection,\r\n                        wait\r\n                    } = this;\r\n                    switch (keyCode) {\r\n\r\n                        // 向左\r\n                        case 37:\r\n                            if (snakeDirection != \"right\" && wait) {\r\n                                this.snakeDirection = \"left\";\r\n                                this.wait = false;\r\n                            }\r\n                            break;\r\n\r\n                            // 向上\r\n                        case 38:\r\n                            if (snakeDirection != \"down\" && wait) {\r\n                                this.snakeDirection = \"up\";\r\n                                this.wait = false;\r\n                            }\r\n                            break;\r\n\r\n                            // 向右\r\n                        case 39:\r\n                            if (snakeDirection != \"left\" && wait) {\r\n                                this.snakeDirection = \"right\";\r\n                                this.wait = false;\r\n                            }\r\n                            break;\r\n\r\n                            // 向下\r\n                        case 40:\r\n                            if (snakeDirection != \"up\" && wait) {\r\n                                this.snakeDirection = \"down\";\r\n                                this.wait = false;\r\n                            }\r\n                            break;\r\n\r\n                            // 空格\r\n                        case 32:\r\n                            // 暂停游戏\r\n                            break;\r\n                    }\r\n                }\r\n            },\r\n\r\n            /**\r\n             * 开始的时候，应当执行一段定时器\r\n             */\r\n            gameStart() {\r\n                let {\r\n                    snakeMoveTimer,\r\n                    snakeMoveSpeed\r\n                } = this;\r\n                this.snakeMoveTimer = setInterval(this.snakeMove, snakeMoveSpeed);\r\n            },\r\n\r\n        },\r\n    }\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    .snake-content {\r\n        padding: 10px;\r\n\r\n        ul {\r\n            display: flex;\r\n\r\n            li {\r\n                width: 14px;\r\n                height: 14px;\r\n                display: block;\r\n                border: 1px solid #6cf;\r\n            }\r\n        }\r\n\r\n        .snake-food {\r\n            background-color: red;\r\n        }\r\n\r\n        .snake-body {\r\n            background-color: rgba($color: #39C5BB, $alpha: 0.6)\r\n        }\r\n\r\n        .snake-head {\r\n            background-color: #39C5BB;\r\n        }\r\n\r\n    }\r\n\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/pages/snake.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"wapper\"},[_c('div',{staticClass:\"snake-content\"},_vm._l((_vm.box[0]),function(item,index){return _c('ul',{key:index},_vm._l((_vm.box[1]),function(aitem,aindex){return _c('li',{key:aindex,ref:(\"r\" + index),refInFor:true})}),0)}),0)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-7db1720c\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/pages/snake.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-7db1720c\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./snake.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./snake.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./snake.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7db1720c\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./snake.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-7db1720c\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/snake.vue\n// module id = null\n// module chunks = ","import Vue from 'vue'\nimport Router from 'vue-router'\nimport snake from '@/pages/snake'\n\nVue.use(Router)\n\nexport default new Router({\n  routes: [\n    {\n      path: '/',\n      name: 'snake',\n      component: snake\n    }\n  ]\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue'\nimport App from './App'\nimport router from './router'\nimport './assets/reset.css'\n\nVue.config.productionTip = false\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  router,\n  components: { App },\n  template: '<App/>'\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}